Les fibres 'Fibers' = fonctions interruptibles sur toute la pile. Peuvent être suspendues à tout endroit de la pile d'appels, en interrompoant l'exéc.
à l'intérieur de la fibre jusqu'à ce qu'elle soit reprise plus tard.

Fibres = mettent en pause l'ensemble de la pile d'exéc. de sorte que l'appelant direct de la fonction n'a pas besoin de modif. la façon dont il
invoque la fonction.

L'exéc peut être interrompue n'imp. où dans la pile d'appels en utilisant Fiber:suspend() qui peut être soit profondément imbriquée dans la Fiber,
soit pas exister du tout.

Contrairement aux Generator, un Fiber possède sa propre pile d'appels, ce qui lui permet d'être mis en pause même dans des fonctions profondément
imbriquées.
Une fonc. déclarant un point d'interruption (c.à.d appelant Fiber::suspend()) n'a pas besoin de changer son type de retour, alors qu'une
fonction utilisant yield doit retourner une instance de type Generator.

Fibers => peuvent être suspendues dans n'importe quel appel de fonction, y compris celles appelées à l'intérieur de la VM PHP, comme les fonctions
fournies à array_map ou les méthodes appelées par foreach sur on objet Iterator.

Une fois suspendue, l'exéc. de la fibre = peut être rprise av. n'imp. quelle val. en utilisant Fiber::resume() ou en lançant une exception
dans la fibre à l'aide de Fiber::throw(). La valeur est renvoyée(ou l'exception lancée) par Fiber::suspend()

[!] A cause limitations actuelles, pas possible de changer de fibre dans le destructeur d'un objet.

Exemple:

<?php
$fiber = new Fiber(function (): void {
   $value = Fiber::suspend('fiber');
   echo "Valeur utilisée pour reprendre la fibre: ", $value, PHP_EOL;
});

$value = $fiber->start();

echo "Valeur de la suspension de la fibre: ", $value, PHP_EOL;

$fiber->resume('test');
?>

	Affichera: 

Valeur de la suspension de la fibre: fiber
Valeur utilisée pour reprendre la fibre: test